{"ast":null,"code":"import _defineProperty from \"/Users/kkirru/AIbootcamp/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kkirru/AIbootcamp/front/src/context/Session/SessionProvider.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport SessionContext, { initialSession } from \"./index\";\n\nclass SessionProvider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setIpAddress = s => {\n      this.setState({\n        ipAddress: s\n      });\n    };\n\n    this.state = _objectSpread({}, initialSession, {\n      setIpAddress: this.setIpAddress\n    });\n    this.setIpAddress = this.setIpAddress.bind(this);\n  }\n\n  render() {\n    return React.createElement(SessionContext.Provider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default SessionProvider;","map":{"version":3,"sources":["/Users/kkirru/AIbootcamp/front/src/context/Session/SessionProvider.tsx"],"names":["React","SessionContext","initialSession","SessionProvider","Component","constructor","props","setIpAddress","s","setState","ipAddress","state","bind","render","children"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,IAAwBC,cAAxB,QAAsD,SAAtD;;AAMA,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA4D;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,SAS1BC,YAT0B,GASVC,CAAD,IAAe;AAC1B,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAEF;AAAZ,OAAd;AACH,KAXyB;;AAEtB,SAAKG,KAAL,qBACOT,cADP;AAEIK,MAAAA,YAAY,EAAE,KAAKA;AAFvB;AAIA,SAAKA,YAAL,GAAoB,KAAKA,YAAL,CAAkBK,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAMDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE,KAAKF,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWQ,QADhB,CADJ;AAKH;;AApBuD;;AAuB5D,eAAeX,eAAf","sourcesContent":["import * as React from \"react\";\nimport SessionContext, {initialSession, Session} from \"./index\";\n\ntype Props = {}\n\ntype State = Session;\n\nclass SessionProvider extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            ...initialSession,\n            setIpAddress: this.setIpAddress\n        };\n        this.setIpAddress = this.setIpAddress.bind(this);\n    }\n\n    setIpAddress = (s: string) => {\n        this.setState({ipAddress: s});\n    };\n\n    render() {\n        return (\n            <SessionContext.Provider value={this.state}>\n                {this.props.children}\n            </SessionContext.Provider>\n        );\n    }\n}\n\nexport default SessionProvider;\n"]},"metadata":{},"sourceType":"module"}