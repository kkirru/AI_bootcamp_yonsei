{"ast":null,"code":"import _slicedToArray from \"/Users/kkirru/AIbootcamp/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kkirru/AIbootcamp/front/src/components/page/landing/index.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport { SERVERLESS_API_ENDPOINT } from \"../../../constants/Credentials\";\nimport publicIp from 'public-ip';\n\nconst Landing = props => {\n  const fieldA = props.fieldA,\n        fieldB = props.fieldB,\n        userName = props.userName,\n        ipAddress = props.ipAddress,\n        setIpAddress = props.setIpAddress;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        apiResponse = _useState2[0],\n        setApiResponse = _useState2[1];\n\n  useEffect(() => {\n    const fetchIpAddress = async () => await publicIp.v4().then(response => setIpAddress(response));\n\n    fetchIpAddress().then(_ => console.log('fetch-ip-address is executed'));\n  }, [setIpAddress]);\n\n  const trigger = userName => {\n    let bodyValue = {\n      userName: userName\n    };\n    fetch(SERVERLESS_API_ENDPOINT + \"send-message\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(bodyValue)\n    }).then(response => response.json()).then(response => {\n      if (response.exitCode !== 200) {\n        throw new Error('send-message API call failed with message: ' + response.message);\n      }\n\n      setApiResponse(response.output);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: 'landing-container',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'landing-title',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, 'Sample Service'), React.createElement(\"div\", {\n    className: 'landing-subtitle',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, 'team-04 page'), React.createElement(\"div\", {\n    className: 'landing-values',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, 'userName = ' + userName), React.createElement(\"div\", {\n    className: 'landing-values',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, 'fieldA value = ' + fieldA), React.createElement(\"div\", {\n    className: 'landing-values',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, 'fieldB value = ' + fieldB), React.createElement(\"div\", {\n    className: 'landing-values',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, 'ip address = ' + ipAddress), React.createElement(\"div\", {\n    className: 'button-container',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: 'button-style',\n    onClick: () => trigger(userName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, 'Trigger API')), React.createElement(\"div\", {\n    className: 'api-response',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, apiResponse));\n};\n\nexport default Landing;","map":{"version":3,"sources":["/Users/kkirru/AIbootcamp/front/src/components/page/landing/index.tsx"],"names":["React","useEffect","useState","SERVERLESS_API_ENDPOINT","publicIp","Landing","props","fieldA","fieldB","userName","ipAddress","setIpAddress","apiResponse","setApiResponse","fetchIpAddress","v4","then","response","_","console","log","trigger","bodyValue","fetch","method","headers","body","JSON","stringify","json","exitCode","Error","message","output"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport \"./styles.css\";\nimport {SERVERLESS_API_ENDPOINT} from \"../../../constants/Credentials\";\nimport publicIp from 'public-ip';\n\ntype SendMessageRequest = {\n    userName: string\n}\n\ntype SendMessageResponse = {\n    output: string,\n    exitCode: number,\n    message: string\n}\n\ntype Props = {\n    fieldA: number;\n    fieldB: string;\n    userName: string;\n    ipAddress: string;\n    setIpAddress: (s: string) => void;\n}\n\nconst Landing: React.FC<Props> = (props: Props) => {\n    const {fieldA, fieldB, userName, ipAddress, setIpAddress} = props;\n\n    const [apiResponse, setApiResponse] = useState('');\n\n    useEffect(() => {\n        const fetchIpAddress = async () => await publicIp.v4().then(response => setIpAddress(response));\n        fetchIpAddress().then(_ => console.log('fetch-ip-address is executed'));\n    }, [setIpAddress]);\n\n    const trigger = (userName: string) => {\n        let bodyValue: SendMessageRequest = {userName: userName};\n        fetch(SERVERLESS_API_ENDPOINT + \"send-message\", {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify(bodyValue)\n        })\n            .then(response => response.json())\n            .then((response: SendMessageResponse) => {\n                if (response.exitCode !== 200) {\n                    throw new Error('send-message API call failed with message: ' + response.message)\n                }\n                setApiResponse(response.output);\n            })\n    };\n\n    return (\n        <div className={'landing-container'}>\n            <div className={'landing-title'}>\n                {'Sample Service'}\n            </div>\n            <div className={'landing-subtitle'}>\n                {'team-04 page'}\n            </div>\n            <div className={'landing-values'}>\n                {'userName = ' + userName}\n            </div>\n            <div className={'landing-values'}>\n                {'fieldA value = ' + fieldA}\n            </div>\n            <div className={'landing-values'}>\n                {'fieldB value = ' + fieldB}\n            </div>\n            <div className={'landing-values'}>\n                {'ip address = ' + ipAddress}\n            </div>\n            <div className={'button-container'}>\n                <button className={'button-style'} onClick={() => trigger(userName)}>\n                    {'Trigger API'}\n                </button>\n            </div>\n            <div className={'api-response'}>\n                {apiResponse}\n            </div>\n        </div>\n    );\n};\n\nexport default Landing;"]},"metadata":{},"sourceType":"module"}